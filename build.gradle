plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"


    modImplementation "maven.modrinth:auth-me:8.0.0+1.20.4"
    modImplementation "maven.modrinth:cloth-config:13.0.121+fabric"
    modImplementation "maven.modrinth:modmenu:9.2.0"
    modImplementation "maven.modrinth:placeholder-api:2.4.0-pre.1+1.20.4"

    compileOnly 'org.apache.commons:commons-lang3:3.3.2'
    api shadow("org.xerial:sqlite-jdbc:3.46.0.0")
    api shadow("org.hibernate.orm:hibernate-community-dialects:6.5.2.Final")
    api shadow('org.hibernate.orm:hibernate-core:6.5.2.Final')

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

remapJar {
    dependsOn(shadowJar)
}

shadowJar {
    archiveFileName.set("ChestShopManager-fabric-v${version}-${findProperty('minecraft_version')}.jar")
    destinationDirectory = file("$rootDir/build")

    configurations = [project.configurations.shadow]
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
    archiveClassifier.set("unshaded")
}